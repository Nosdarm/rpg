"""Initial full state

Revision ID: 2349f689576b
Revises: 
Create Date: 2025-07-06 20:18:51.711340

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2349f689576b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('global_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('static_id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=False),
    sa.Column('description_i18n', sa.JSON(), nullable=False),
    sa.Column('event_type', sa.Text(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('trigger_time', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('expiration_time', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('status', sa.Text(), nullable=False),
    sa.Column('properties_json', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_global_events_event_type'), 'global_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_global_events_guild_id'), 'global_events', ['guild_id'], unique=False)
    op.create_index('ix_global_events_guild_id_static_id', 'global_events', ['guild_id', 'static_id'], unique=True)
    op.create_index(op.f('ix_global_events_id'), 'global_events', ['id'], unique=False)
    op.create_index(op.f('ix_global_events_location_id'), 'global_events', ['location_id'], unique=False)
    op.create_index(op.f('ix_global_events_static_id'), 'global_events', ['static_id'], unique=False)
    op.create_index(op.f('ix_global_events_status'), 'global_events', ['status'], unique=False)
    op.create_index('ix_global_events_status_trigger_time', 'global_events', ['status', 'trigger_time'], unique=False)
    op.create_table('global_npcs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('static_id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=False),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.Column('current_location_id', sa.Integer(), nullable=True),
    sa.Column('base_npc_id', sa.Integer(), nullable=True),
    sa.Column('properties_json', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['base_npc_id'], ['generated_npcs.id'], ),
    sa.ForeignKeyConstraint(['current_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_global_npcs_current_location_id'), 'global_npcs', ['current_location_id'], unique=False)
    op.create_index(op.f('ix_global_npcs_guild_id'), 'global_npcs', ['guild_id'], unique=False)
    op.create_index('ix_global_npcs_guild_id_static_id', 'global_npcs', ['guild_id', 'static_id'], unique=True)
    op.create_index(op.f('ix_global_npcs_id'), 'global_npcs', ['id'], unique=False)
    op.create_index(op.f('ix_global_npcs_static_id'), 'global_npcs', ['static_id'], unique=False)
    op.add_column('generated_quests', sa.Column('is_repeatable', sa.Boolean(), nullable=False))
    op.add_column('generated_quests', sa.Column('properties_json', src.models.custom_types.JsonBForSQLite(), nullable=True))
    op.add_column('generated_quests', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('generated_quests', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('mobile_groups', sa.Column('static_id', sa.String(), nullable=False))
    op.add_column('mobile_groups', sa.Column('description_i18n', src.models.custom_types.JsonBForSQLite(), nullable=True))
    op.add_column('mobile_groups', sa.Column('leader_global_npc_id', sa.Integer(), nullable=True))
    op.add_column('mobile_groups', sa.Column('members_definition_json', src.models.custom_types.JsonBForSQLite(), nullable=False))
    op.add_column('mobile_groups', sa.Column('properties_json', src.models.custom_types.JsonBForSQLite(), nullable=True))
    op.add_column('mobile_groups', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('mobile_groups', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.create_index('ix_mobile_groups_guild_id_static_id', 'mobile_groups', ['guild_id', 'static_id'], unique=True)
    op.create_index(op.f('ix_mobile_groups_leader_global_npc_id'), 'mobile_groups', ['leader_global_npc_id'], unique=False)
    op.create_index(op.f('ix_mobile_groups_static_id'), 'mobile_groups', ['static_id'], unique=False)
    op.create_foreign_key(None, 'mobile_groups', 'global_npcs', ['leader_global_npc_id'], ['id'], ondelete='SET NULL')
    op.drop_column('mobile_groups', 'members_json')
    op.add_column('player_quest_progress', sa.Column('party_id', sa.Integer(), nullable=True))
    op.add_column('player_quest_progress', sa.Column('accepted_at', sa.DateTime(), nullable=True))
    op.add_column('player_quest_progress', sa.Column('completed_at', sa.DateTime(), nullable=True))
    op.add_column('player_quest_progress', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('player_quest_progress', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('player_quest_progress', 'player_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(op.f('uq_player_quest'), 'player_quest_progress', type_='unique')
    op.create_index(op.f('ix_player_quest_progress_party_id'), 'player_quest_progress', ['party_id'], unique=False)
    op.create_index('ix_player_quest_progress_party_quest', 'player_quest_progress', ['party_id', 'quest_id'], unique=False)
    op.create_index('ix_player_quest_progress_player_quest', 'player_quest_progress', ['player_id', 'quest_id'], unique=False)
    op.create_unique_constraint('uq_party_quest_guild', 'player_quest_progress', ['guild_id', 'party_id', 'quest_id'])
    op.create_unique_constraint('uq_player_quest_guild', 'player_quest_progress', ['guild_id', 'player_id', 'quest_id'])
    op.create_foreign_key(None, 'player_quest_progress', 'parties', ['party_id'], ['id'], ondelete='CASCADE')
    op.add_column('quest_steps', sa.Column('next_step_order', sa.Integer(), nullable=True))
    op.add_column('quest_steps', sa.Column('properties_json', src.models.custom_types.JsonBForSQLite(), nullable=True))
    op.add_column('quest_steps', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('quest_steps', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('questlines', sa.Column('title_i18n', src.models.custom_types.JsonBForSQLite(), nullable=False))
    op.add_column('questlines', sa.Column('starting_quest_static_id', sa.Text(), nullable=True))
    op.add_column('questlines', sa.Column('is_main_storyline', sa.Boolean(), nullable=False))
    op.add_column('questlines', sa.Column('required_previous_questline_static_id', sa.Text(), nullable=True))
    op.add_column('questlines', sa.Column('properties_json', src.models.custom_types.JsonBForSQLite(), nullable=True))
    op.add_column('questlines', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('questlines', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.drop_column('questlines', 'name_i18n')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('questlines', sa.Column('name_i18n', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.drop_column('questlines', 'updated_at')
    op.drop_column('questlines', 'created_at')
    op.drop_column('questlines', 'properties_json')
    op.drop_column('questlines', 'required_previous_questline_static_id')
    op.drop_column('questlines', 'is_main_storyline')
    op.drop_column('questlines', 'starting_quest_static_id')
    op.drop_column('questlines', 'title_i18n')
    op.drop_column('quest_steps', 'updated_at')
    op.drop_column('quest_steps', 'created_at')
    op.drop_column('quest_steps', 'properties_json')
    op.drop_column('quest_steps', 'next_step_order')
    op.drop_constraint(None, 'player_quest_progress', type_='foreignkey')
    op.drop_constraint('uq_player_quest_guild', 'player_quest_progress', type_='unique')
    op.drop_constraint('uq_party_quest_guild', 'player_quest_progress', type_='unique')
    op.drop_index('ix_player_quest_progress_player_quest', table_name='player_quest_progress')
    op.drop_index('ix_player_quest_progress_party_quest', table_name='player_quest_progress')
    op.drop_index(op.f('ix_player_quest_progress_party_id'), table_name='player_quest_progress')
    op.create_unique_constraint(op.f('uq_player_quest'), 'player_quest_progress', ['guild_id', 'player_id', 'quest_id'], postgresql_nulls_not_distinct=False)
    op.alter_column('player_quest_progress', 'player_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('player_quest_progress', 'updated_at')
    op.drop_column('player_quest_progress', 'created_at')
    op.drop_column('player_quest_progress', 'completed_at')
    op.drop_column('player_quest_progress', 'accepted_at')
    op.drop_column('player_quest_progress', 'party_id')
    op.add_column('mobile_groups', sa.Column('members_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'mobile_groups', type_='foreignkey')
    op.drop_index(op.f('ix_mobile_groups_static_id'), table_name='mobile_groups')
    op.drop_index(op.f('ix_mobile_groups_leader_global_npc_id'), table_name='mobile_groups')
    op.drop_index('ix_mobile_groups_guild_id_static_id', table_name='mobile_groups')
    op.drop_column('mobile_groups', 'updated_at')
    op.drop_column('mobile_groups', 'created_at')
    op.drop_column('mobile_groups', 'properties_json')
    op.drop_column('mobile_groups', 'members_definition_json')
    op.drop_column('mobile_groups', 'leader_global_npc_id')
    op.drop_column('mobile_groups', 'description_i18n')
    op.drop_column('mobile_groups', 'static_id')
    op.drop_column('generated_quests', 'updated_at')
    op.drop_column('generated_quests', 'created_at')
    op.drop_column('generated_quests', 'properties_json')
    op.drop_column('generated_quests', 'is_repeatable')
    op.drop_index(op.f('ix_global_npcs_static_id'), table_name='global_npcs')
    op.drop_index(op.f('ix_global_npcs_id'), table_name='global_npcs')
    op.drop_index('ix_global_npcs_guild_id_static_id', table_name='global_npcs')
    op.drop_index(op.f('ix_global_npcs_guild_id'), table_name='global_npcs')
    op.drop_index(op.f('ix_global_npcs_current_location_id'), table_name='global_npcs')
    op.drop_table('global_npcs')
    op.drop_index('ix_global_events_status_trigger_time', table_name='global_events')
    op.drop_index(op.f('ix_global_events_status'), table_name='global_events')
    op.drop_index(op.f('ix_global_events_static_id'), table_name='global_events')
    op.drop_index(op.f('ix_global_events_location_id'), table_name='global_events')
    op.drop_index(op.f('ix_global_events_id'), table_name='global_events')
    op.drop_index('ix_global_events_guild_id_static_id', table_name='global_events')
    op.drop_index(op.f('ix_global_events_guild_id'), table_name='global_events')
    op.drop_index(op.f('ix_global_events_event_type'), table_name='global_events')
    op.drop_table('global_events')
    # ### end Alembic commands ###
