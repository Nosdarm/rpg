"""create_combat_encounter_table

Revision ID: 0002
Revises: fcb2e6d12a18
Create Date: YYYY-MM-DD HH:MM:SS.ffffff

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0002'
down_revision: Union[str, None] = 'fcb2e6d12a18'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# Define CombatStatus Enum values for the migration
combat_status_enum_values = [
    "pending_start",
    "active",
    "player_turn",
    "npc_turn",
    "ended_victory_players",
    "ended_victory_npcs",
    "ended_stalemate",
    "ended_escaped",
    "error",
]
combat_status_enum = postgresql.ENUM(*combat_status_enum_values, name='combat_status_enum', create_type=False)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    combat_status_enum.create(op.get_bind(), checkfirst=True)
    op.create_table('combat_encounters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('status', combat_status_enum, nullable=False, server_default='pending_start'),
    sa.Column('current_turn_entity_id', sa.Integer(), nullable=True),
    sa.Column('current_turn_entity_type', sa.Text(), nullable=True),
    sa.Column('turn_order_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('rules_config_snapshot_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('participants_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('combat_log_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_combat_encounters_guild_id'), 'combat_encounters', ['guild_id'], unique=False)
    op.create_index(op.f('ix_combat_encounters_id'), 'combat_encounters', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_combat_encounters_id'), table_name='combat_encounters')
    op.drop_index(op.f('ix_combat_encounters_guild_id'), table_name='combat_encounters')
    op.drop_table('combat_encounters')
    combat_status_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
