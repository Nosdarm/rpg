"""combat

Revision ID: 8a4788905319
Revises: 7c27451a6727
Create Date: 2025-07-04 16:25:32.115304

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from src.models.custom_types import JsonBForSQLite # Added import

# revision identifiers, used by Alembic.
revision: str = '8a4788905319'
down_revision: Union[str, Sequence[str], None] = '7c27451a6727'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('abilities', 'guild_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.add_column('active_status_effects', sa.Column('custom_properties_json', JsonBForSQLite(), nullable=True)) # Changed
    op.alter_column('active_status_effects', 'entity_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('active_status_effects', 'entity_type',
               existing_type=postgresql.ENUM('PLAYER', 'PARTY', 'GENERATED_NPC', 'GENERATED_FACTION', name='relationship_entity_type_enum'),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('active_status_effects', 'source_entity_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('active_status_effects', 'source_entity_type',
               existing_type=postgresql.ENUM('PLAYER', 'PARTY', 'GENERATED_NPC', 'GENERATED_FACTION', name='relationship_entity_type_enum_source'),
               type_=sa.Text(),
               existing_nullable=True)
    op.drop_index(op.f('ix_active_status_effects_entity'), table_name='active_status_effects')
    op.drop_index(op.f('ix_active_status_effects_source_entity'), table_name='active_status_effects')
    op.drop_index(op.f('ix_active_status_effects_status_effect_id'), table_name='active_status_effects')
    op.drop_constraint(op.f('uq_active_status_entity_effect'), 'active_status_effects', type_='unique')
    op.create_index(op.f('ix_active_status_effects_source_entity_id'), 'active_status_effects', ['source_entity_id'], unique=False)
    op.create_index(op.f('ix_active_status_effects_source_entity_type'), 'active_status_effects', ['source_entity_type'], unique=False)
    op.drop_constraint(op.f('active_status_effects_guild_id_fkey'), 'active_status_effects', type_='foreignkey')
    op.drop_constraint(op.f('active_status_effects_status_effect_id_fkey'), 'active_status_effects', type_='foreignkey')
    op.drop_constraint(op.f('active_status_effects_source_ability_id_fkey'), 'active_status_effects', type_='foreignkey')
    op.create_foreign_key(None, 'active_status_effects', 'guild_configs', ['guild_id'], ['id'])
    op.create_foreign_key(None, 'active_status_effects', 'status_effects', ['status_effect_id'], ['id'])
    op.drop_column('active_status_effects', 'data_json')
    op.add_column('guild_configs', sa.Column('name', sa.Text(), nullable=True))
    op.alter_column('locations', 'name_i18n',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=JsonBForSQLite(), # Changed
               existing_nullable=False)
    op.alter_column('locations', 'descriptions_i18n',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=JsonBForSQLite(), # Changed
               existing_nullable=False)
    op.alter_column('locations', 'coordinates_json',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=JsonBForSQLite(), # Changed
               existing_nullable=True)
    op.alter_column('locations', 'neighbor_locations_json',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=JsonBForSQLite(), # Changed
               existing_nullable=True)
    op.alter_column('locations', 'generated_details_json',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=JsonBForSQLite(), # Changed
               existing_nullable=True)
    op.alter_column('locations', 'ai_metadata_json',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=JsonBForSQLite(), # Changed
               existing_nullable=True)
    op.add_column('parties', sa.Column('leader_player_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_parties_leader_player_id'), 'parties', ['leader_player_id'], unique=False)
    op.create_foreign_key('fk_party_leader_player_id', 'parties', 'players', ['leader_player_id'], ['id'])
    op.add_column('status_effects', sa.Column('properties_json', JsonBForSQLite(), nullable=False)) # Changed
    op.alter_column('status_effects', 'guild_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.drop_constraint(op.f('status_effects_guild_id_fkey'), 'status_effects', type_='foreignkey')
    op.create_foreign_key(None, 'status_effects', 'guild_configs', ['guild_id'], ['id'])
    op.drop_column('status_effects', 'effects_json')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('status_effects', sa.Column('effects_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.drop_constraint('fk_status_effects_guild_configs_placeholder', 'status_effects', type_='foreignkey') # Placeholder name
    op.create_foreign_key(op.f('status_effects_guild_id_fkey'), 'status_effects', 'guild_configs', ['guild_id'], ['id'], ondelete='CASCADE')
    op.alter_column('status_effects', 'guild_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.drop_column('status_effects', 'properties_json')
    op.drop_constraint('fk_party_leader_player_id', 'parties', type_='foreignkey')
    op.drop_index(op.f('ix_parties_leader_player_id'), table_name='parties')
    op.drop_column('parties', 'leader_player_id')
    op.alter_column('locations', 'ai_metadata_json',
               existing_type=JsonBForSQLite(), # Changed
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('locations', 'generated_details_json',
               existing_type=JsonBForSQLite(), # Changed
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('locations', 'neighbor_locations_json',
               existing_type=JsonBForSQLite(), # Changed
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('locations', 'coordinates_json',
               existing_type=JsonBForSQLite(), # Changed
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('locations', 'descriptions_i18n',
               existing_type=JsonBForSQLite(), # Changed
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False)
    op.alter_column('locations', 'name_i18n',
               existing_type=JsonBForSQLite(), # Changed
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False)
    op.drop_column('guild_configs', 'name')
    op.add_column('active_status_effects', sa.Column('data_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_constraint('fk_active_status_effects_guild_configs_placeholder', 'active_status_effects', type_='foreignkey') # Placeholder name
    op.drop_constraint('fk_active_status_effects_status_effects_placeholder', 'active_status_effects', type_='foreignkey') # Placeholder name
    op.create_foreign_key(op.f('active_status_effects_source_ability_id_fkey'), 'active_status_effects', 'abilities', ['source_ability_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(op.f('active_status_effects_status_effect_id_fkey'), 'active_status_effects', 'status_effects', ['status_effect_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('active_status_effects_guild_id_fkey'), 'active_status_effects', 'guild_configs', ['guild_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_active_status_effects_source_entity_type'), table_name='active_status_effects')
    op.drop_index(op.f('ix_active_status_effects_source_entity_id'), table_name='active_status_effects')
    op.create_unique_constraint(op.f('uq_active_status_entity_effect'), 'active_status_effects', ['guild_id', 'entity_type', 'entity_id', 'status_effect_id'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('ix_active_status_effects_status_effect_id'), 'active_status_effects', ['status_effect_id'], unique=False)
    op.create_index(op.f('ix_active_status_effects_source_entity'), 'active_status_effects', ['source_entity_type', 'source_entity_id'], unique=False)
    op.create_index(op.f('ix_active_status_effects_entity'), 'active_status_effects', ['guild_id', 'entity_type', 'entity_id'], unique=False)
    op.alter_column('active_status_effects', 'source_entity_type',
               existing_type=sa.Text(),
               type_=postgresql.ENUM('PLAYER', 'PARTY', 'GENERATED_NPC', 'GENERATED_FACTION', name='relationship_entity_type_enum_source'),
               existing_nullable=True)
    op.alter_column('active_status_effects', 'source_entity_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('active_status_effects', 'entity_type',
               existing_type=sa.Text(),
               type_=postgresql.ENUM('PLAYER', 'PARTY', 'GENERATED_NPC', 'GENERATED_FACTION', name='relationship_entity_type_enum'),
               existing_nullable=False)
    op.alter_column('active_status_effects', 'entity_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.drop_column('active_status_effects', 'custom_properties_json')
    op.alter_column('abilities', 'guild_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    # ### end Alembic commands ###