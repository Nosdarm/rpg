"""initial_schema_setup

Revision ID: fcb2e6d12a18
Revises: 
Create Date: 2025-07-02 19:02:40.801650

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fcb2e6d12a18'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('guild_configs',
    sa.Column('id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('master_channel_id', sa.BigInteger(), nullable=True),
    sa.Column('system_channel_id', sa.BigInteger(), nullable=True),
    sa.Column('notification_channel_id', sa.BigInteger(), nullable=True),
    sa.Column('main_language', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_guild_configs_id'), 'guild_configs', ['id'], unique=False)
    op.create_table('abilities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.Column('static_id', sa.Text(), nullable=False),
    sa.Column('name_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('properties_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id', 'static_id', name='uq_ability_guild_static_id')
    )
    op.create_index(op.f('ix_abilities_guild_id'), 'abilities', ['guild_id'], unique=False)
    op.create_index(op.f('ix_abilities_id'), 'abilities', ['id'], unique=False)
    op.create_index(op.f('ix_abilities_static_id'), 'abilities', ['static_id'], unique=False)
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('static_id', sa.Text(), nullable=True),
    sa.Column('name_i18n', sa.JSON(), nullable=False),
    sa.Column('description_i18n', sa.JSON(), nullable=False),
    sa.Column('item_type_i18n', sa.JSON(), nullable=True),
    sa.Column('item_category_i18n', sa.JSON(), nullable=True),
    sa.Column('base_value', sa.Integer(), nullable=True),
    sa.Column('properties_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_items_guild_id'), 'items', ['guild_id'], unique=False)
    op.create_index('ix_items_guild_id_static_id', 'items', ['guild_id', 'static_id'], unique=True)
    op.create_index(op.f('ix_items_id'), 'items', ['id'], unique=False)
    op.create_index(op.f('ix_items_static_id'), 'items', ['static_id'], unique=False)
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('static_id', sa.Text(), nullable=True),
    sa.Column('name_i18n', sa.JSON(), nullable=False),
    sa.Column('descriptions_i18n', sa.JSON(), nullable=False),
    sa.Column('type', sa.Enum('GENERIC', 'TOWN', 'CITY', 'VILLAGE', 'FOREST', 'MOUNTAIN', 'CAVE', 'DUNGEON', 'SHOP', 'TAVERN', 'ROAD', 'PORT', name='locationtype'), nullable=False),
    sa.Column('coordinates_json', sa.JSON(), nullable=True),
    sa.Column('neighbor_locations_json', sa.JSON(), nullable=True),
    sa.Column('generated_details_json', sa.JSON(), nullable=True),
    sa.Column('ai_metadata_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_locations_guild_id'), 'locations', ['guild_id'], unique=False)
    op.create_index('ix_locations_guild_id_static_id', 'locations', ['guild_id', 'static_id'], unique=True)
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)
    op.create_index(op.f('ix_locations_static_id'), 'locations', ['static_id'], unique=False)
    op.create_table('pending_conflicts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('involved_entities_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment="List of involved entity identifiers, e.g., [{'type': 'player', 'id': 123, 'name': 'PlayerName'}]"),
    sa.Column('conflicting_actions_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='List of ParsedAction objects (as dicts) that are in conflict'),
    sa.Column('status', sa.Enum('PENDING_MASTER_RESOLUTION', 'RESOLVED_AUTOMATICALLY_CONTINUE', 'RESOLVED_AUTOMATICALLY_REJECT', 'RESOLVED_BY_MASTER_APPROVED', 'RESOLVED_BY_MASTER_REJECTED', 'EXPIRED', name='conflict_status_enum'), nullable=False),
    sa.Column('resolution_notes', sa.Text(), nullable=True, comment='Notes from auto-resolution or Master'),
    sa.Column('resolved_action_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="If Master edits/chooses an action, it's stored here as a ParsedAction dict"),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pending_conflicts_guild_id'), 'pending_conflicts', ['guild_id'], unique=False)
    op.create_index(op.f('ix_pending_conflicts_id'), 'pending_conflicts', ['id'], unique=False)
    op.create_index(op.f('ix_pending_conflicts_status'), 'pending_conflicts', ['status'], unique=False)
    op.create_table('questlines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('static_id', sa.Text(), nullable=False),
    sa.Column('name_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id', 'static_id', name='uq_questline_guild_static_id')
    )
    op.create_index(op.f('ix_questlines_guild_id'), 'questlines', ['guild_id'], unique=False)
    op.create_index(op.f('ix_questlines_id'), 'questlines', ['id'], unique=False)
    op.create_index(op.f('ix_questlines_static_id'), 'questlines', ['static_id'], unique=False)
    op.create_table('relationships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('entity1_type', sa.Enum('PLAYER', 'PARTY', 'GENERATED_NPC', 'GENERATED_FACTION', name='relationship_entity_type_enum'), nullable=False),
    sa.Column('entity1_id', sa.BigInteger(), nullable=False),
    sa.Column('entity2_type', sa.Enum('PLAYER', 'PARTY', 'GENERATED_NPC', 'GENERATED_FACTION', name='relationship_entity_type_enum'), nullable=False),
    sa.Column('entity2_id', sa.BigInteger(), nullable=False),
    sa.Column('relationship_type_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('ai_metadata_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id', 'entity1_type', 'entity1_id', 'entity2_type', 'entity2_id', name='uq_relationship_entities')
    )
    op.create_index(op.f('ix_relationships_entity1_id'), 'relationships', ['entity1_id'], unique=False)
    op.create_index(op.f('ix_relationships_entity1_type'), 'relationships', ['entity1_type'], unique=False)
    op.create_index(op.f('ix_relationships_entity2_id'), 'relationships', ['entity2_id'], unique=False)
    op.create_index(op.f('ix_relationships_entity2_type'), 'relationships', ['entity2_type'], unique=False)
    op.create_index(op.f('ix_relationships_guild_id'), 'relationships', ['guild_id'], unique=False)
    op.create_index(op.f('ix_relationships_id'), 'relationships', ['id'], unique=False)
    op.create_index(op.f('ix_relationships_value'), 'relationships', ['value'], unique=False)
    op.create_table('rule_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('key', sa.Text(), nullable=False),
    sa.Column('value_json', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rule_configs_guild_id'), 'rule_configs', ['guild_id'], unique=False)
    op.create_index('ix_rule_configs_guild_id_key', 'rule_configs', ['guild_id', 'key'], unique=True)
    op.create_index(op.f('ix_rule_configs_id'), 'rule_configs', ['id'], unique=False)
    op.create_index(op.f('ix_rule_configs_key'), 'rule_configs', ['key'], unique=False)
    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.Column('static_id', sa.Text(), nullable=False),
    sa.Column('name_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('related_attribute_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('properties_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id', 'static_id', name='uq_skill_guild_static_id')
    )
    op.create_index(op.f('ix_skills_guild_id'), 'skills', ['guild_id'], unique=False)
    op.create_index(op.f('ix_skills_id'), 'skills', ['id'], unique=False)
    op.create_index(op.f('ix_skills_static_id'), 'skills', ['static_id'], unique=False)
    op.create_table('status_effects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.Column('static_id', sa.Text(), nullable=False),
    sa.Column('name_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('effects_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id', 'static_id', name='uq_status_effect_guild_static_id')
    )
    op.create_index(op.f('ix_status_effects_guild_id'), 'status_effects', ['guild_id'], unique=False)
    op.create_index(op.f('ix_status_effects_id'), 'status_effects', ['id'], unique=False)
    op.create_index(op.f('ix_status_effects_static_id'), 'status_effects', ['static_id'], unique=False)
    op.create_table('active_status_effects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('entity_type', sa.Enum('PLAYER', 'PARTY', 'GENERATED_NPC', 'GENERATED_FACTION', name='relationship_entity_type_enum'), nullable=False),
    sa.Column('entity_id', sa.BigInteger(), nullable=False),
    sa.Column('status_effect_id', sa.Integer(), nullable=False),
    sa.Column('applied_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('duration_turns', sa.Integer(), nullable=True),
    sa.Column('remaining_turns', sa.Integer(), nullable=True),
    sa.Column('source_ability_id', sa.Integer(), nullable=True),
    sa.Column('source_entity_id', sa.BigInteger(), nullable=True),
    sa.Column('source_entity_type', sa.Enum('PLAYER', 'PARTY', 'GENERATED_NPC', 'GENERATED_FACTION', name='relationship_entity_type_enum_source'), nullable=True),
    sa.Column('data_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_ability_id'], ['abilities.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['status_effect_id'], ['status_effects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id', 'entity_type', 'entity_id', 'status_effect_id', name='uq_active_status_entity_effect')
    )
    op.create_index('ix_active_status_effects_entity', 'active_status_effects', ['guild_id', 'entity_type', 'entity_id'], unique=False)
    op.create_index(op.f('ix_active_status_effects_entity_id'), 'active_status_effects', ['entity_id'], unique=False)
    op.create_index(op.f('ix_active_status_effects_entity_type'), 'active_status_effects', ['entity_type'], unique=False)
    op.create_index(op.f('ix_active_status_effects_guild_id'), 'active_status_effects', ['guild_id'], unique=False)
    op.create_index(op.f('ix_active_status_effects_id'), 'active_status_effects', ['id'], unique=False)
    op.create_index('ix_active_status_effects_source_entity', 'active_status_effects', ['source_entity_type', 'source_entity_id'], unique=False)
    op.create_index(op.f('ix_active_status_effects_status_effect_id'), 'active_status_effects', ['status_effect_id'], unique=False)
    op.create_table('crafting_recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.Column('static_id', sa.Text(), nullable=False),
    sa.Column('name_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('result_item_id', sa.Integer(), nullable=False),
    sa.Column('result_quantity', sa.Integer(), nullable=False),
    sa.Column('ingredients_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('required_skill_id', sa.Integer(), nullable=True),
    sa.Column('required_skill_level', sa.Integer(), nullable=True),
    sa.Column('properties_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['required_skill_id'], ['skills.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['result_item_id'], ['items.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id', 'static_id', name='uq_crafting_recipe_guild_static_id')
    )
    op.create_index(op.f('ix_crafting_recipes_guild_id'), 'crafting_recipes', ['guild_id'], unique=False)
    op.create_index(op.f('ix_crafting_recipes_id'), 'crafting_recipes', ['id'], unique=False)
    op.create_index(op.f('ix_crafting_recipes_required_skill_id'), 'crafting_recipes', ['required_skill_id'], unique=False)
    op.create_index(op.f('ix_crafting_recipes_static_id'), 'crafting_recipes', ['static_id'], unique=False)
    op.create_table('generated_npcs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('static_id', sa.Text(), nullable=True),
    sa.Column('name_i18n', sa.JSON(), nullable=False),
    sa.Column('description_i18n', sa.JSON(), nullable=False),
    sa.Column('current_location_id', sa.Integer(), nullable=True),
    sa.Column('npc_type_i18n', sa.JSON(), nullable=True),
    sa.Column('properties_json', sa.JSON(), nullable=True),
    sa.Column('ai_metadata_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['current_location_id'], ['locations.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generated_npcs_current_location_id'), 'generated_npcs', ['current_location_id'], unique=False)
    op.create_index(op.f('ix_generated_npcs_guild_id'), 'generated_npcs', ['guild_id'], unique=False)
    op.create_index('ix_generated_npcs_guild_id_static_id', 'generated_npcs', ['guild_id', 'static_id'], unique=True)
    op.create_index(op.f('ix_generated_npcs_id'), 'generated_npcs', ['id'], unique=False)
    op.create_index(op.f('ix_generated_npcs_static_id'), 'generated_npcs', ['static_id'], unique=False)
    op.create_table('generated_quests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('static_id', sa.Text(), nullable=False),
    sa.Column('title_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('questline_id', sa.Integer(), nullable=True),
    sa.Column('giver_entity_type', sa.Enum('PLAYER', 'PARTY', 'GENERATED_NPC', 'GENERATED_FACTION', name='relationship_entity_type_enum'), nullable=True),
    sa.Column('giver_entity_id', sa.BigInteger(), nullable=True),
    sa.Column('min_level', sa.Integer(), nullable=True),
    sa.Column('rewards_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_metadata_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['questline_id'], ['questlines.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id', 'static_id', name='uq_generated_quest_guild_static_id')
    )
    op.create_index('ix_generated_quests_giver', 'generated_quests', ['guild_id', 'giver_entity_type', 'giver_entity_id'], unique=False)
    op.create_index(op.f('ix_generated_quests_guild_id'), 'generated_quests', ['guild_id'], unique=False)
    op.create_index(op.f('ix_generated_quests_id'), 'generated_quests', ['id'], unique=False)
    op.create_index(op.f('ix_generated_quests_questline_id'), 'generated_quests', ['questline_id'], unique=False)
    op.create_index(op.f('ix_generated_quests_static_id'), 'generated_quests', ['static_id'], unique=False)
    op.create_table('inventory_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('owner_entity_type', sa.Enum('PLAYER', 'GENERATED_NPC', 'PARTY', 'LOCATION_CONTAINER', name='owner_entity_type_enum'), nullable=False),
    sa.Column('owner_entity_id', sa.BigInteger(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('instance_specific_properties_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id', 'owner_entity_type', 'owner_entity_id', 'item_id', name='uq_inventory_owner_item')
    )
    op.create_index(op.f('ix_inventory_items_guild_id'), 'inventory_items', ['guild_id'], unique=False)
    op.create_index(op.f('ix_inventory_items_id'), 'inventory_items', ['id'], unique=False)
    op.create_index(op.f('ix_inventory_items_item_id'), 'inventory_items', ['item_id'], unique=False)
    op.create_index(op.f('ix_inventory_items_owner_entity_id'), 'inventory_items', ['owner_entity_id'], unique=False)
    op.create_index(op.f('ix_inventory_items_owner_entity_type'), 'inventory_items', ['owner_entity_type'], unique=False)
    op.create_table('mobile_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('name_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('current_location_id', sa.Integer(), nullable=True),
    sa.Column('members_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('behavior_type_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('route_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_metadata_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['current_location_id'], ['locations.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mobile_groups_current_location_id'), 'mobile_groups', ['current_location_id'], unique=False)
    op.create_index(op.f('ix_mobile_groups_guild_id'), 'mobile_groups', ['guild_id'], unique=False)
    op.create_index(op.f('ix_mobile_groups_id'), 'mobile_groups', ['id'], unique=False)
    op.create_table('parties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('player_ids_json', sa.JSON(), nullable=True),
    sa.Column('current_location_id', sa.Integer(), nullable=True),
    sa.Column('turn_status', sa.Enum('UNKNOWN', 'IDLE', 'AWAITING_PARTY_ACTION', 'TURN_ENDED_PENDING_RESOLUTION', 'PROCESSING_GUILD_TURN', 'AWAITING_MODERATION', name='party_turn_status_enum', create_constraint=True), nullable=False),
    sa.ForeignKeyConstraint(['current_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parties_guild_id'), 'parties', ['guild_id'], unique=False)
    op.create_index(op.f('ix_parties_id'), 'parties', ['id'], unique=False)
    op.create_table('story_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('event_type', sa.Enum('PLAYER_ACTION', 'NPC_ACTION', 'SYSTEM_EVENT', 'COMBAT_START', 'COMBAT_ACTION', 'COMBAT_END', 'MOVEMENT', 'DIALOGUE_START', 'DIALOGUE_LINE', 'DIALOGUE_END', 'QUEST_ACCEPTED', 'QUEST_STEP_COMPLETED', 'QUEST_COMPLETED', 'QUEST_FAILED', 'ITEM_ACQUIRED', 'ITEM_USED', 'ITEM_DROPPED', 'TRADE_INITIATED', 'TRADE_COMPLETED', 'LEVEL_UP', 'XP_GAINED', 'RELATIONSHIP_CHANGE', 'FACTION_CHANGE', 'WORLD_STATE_CHANGE', 'MASTER_COMMAND', 'ERROR_EVENT', 'ABILITY_USED', 'STATUS_APPLIED', 'STATUS_REMOVED', 'AI_GENERATION_TRIGGERED', 'AI_RESPONSE_RECEIVED', 'AI_CONTENT_VALIDATION_SUCCESS', 'AI_CONTENT_VALIDATION_FAILED', 'AI_CONTENT_APPROVED', 'AI_CONTENT_REJECTED', 'AI_CONTENT_EDITED', 'AI_CONTENT_SAVED', 'WORLD_EVENT_LOCATION_GENERATED', 'MASTER_ACTION_LOCATION_ADDED', 'MASTER_ACTION_LOCATION_REMOVED', 'MASTER_ACTION_LOCATIONS_CONNECTED', 'MASTER_ACTION_LOCATIONS_DISCONNECTED', name='event_type_enum'), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('entity_ids_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('details_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('narrative_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_story_logs_event_type'), 'story_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_story_logs_guild_id'), 'story_logs', ['guild_id'], unique=False)
    op.create_index(op.f('ix_story_logs_id'), 'story_logs', ['id'], unique=False)
    op.create_index(op.f('ix_story_logs_location_id'), 'story_logs', ['location_id'], unique=False)
    op.create_index(op.f('ix_story_logs_timestamp'), 'story_logs', ['timestamp'], unique=False)
    op.create_table('generated_factions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('static_id', sa.Text(), nullable=True),
    sa.Column('name_i18n', sa.JSON(), nullable=False),
    sa.Column('description_i18n', sa.JSON(), nullable=False),
    sa.Column('ideology_i18n', sa.JSON(), nullable=True),
    sa.Column('leader_npc_id', sa.Integer(), nullable=True),
    sa.Column('resources_json', sa.JSON(), nullable=True),
    sa.Column('ai_metadata_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['leader_npc_id'], ['generated_npcs.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generated_factions_guild_id'), 'generated_factions', ['guild_id'], unique=False)
    op.create_index('ix_generated_factions_guild_id_static_id', 'generated_factions', ['guild_id', 'static_id'], unique=True)
    op.create_index(op.f('ix_generated_factions_id'), 'generated_factions', ['id'], unique=False)
    op.create_index(op.f('ix_generated_factions_leader_npc_id'), 'generated_factions', ['leader_npc_id'], unique=False)
    op.create_index(op.f('ix_generated_factions_static_id'), 'generated_factions', ['static_id'], unique=False)
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('discord_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('current_location_id', sa.Integer(), nullable=True),
    sa.Column('selected_language', sa.Text(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('unspent_xp', sa.Integer(), nullable=False),
    sa.Column('gold', sa.Integer(), nullable=False),
    sa.Column('current_hp', sa.Integer(), nullable=True),
    sa.Column('current_status', sa.Enum('UNKNOWN', 'IDLE', 'EXPLORING', 'COMBAT', 'DIALOGUE', 'TRADING', 'MENU', 'AWAY', 'DEAD', 'AWAITING_MODERATION', 'TURN_ENDED_PENDING_RESOLUTION', 'PROCESSING_GUILD_TURN', 'PROCESSING_ACTION', name='player_status_enum', create_constraint=True), nullable=False),
    sa.Column('collected_actions_json', sa.JSON(), nullable=True),
    sa.Column('current_party_id', sa.Integer(), nullable=True),
    sa.Column('current_sublocation_name', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['current_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['current_party_id'], ['parties.id'], ),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id', 'discord_id', name='uq_player_guild_discord')
    )
    op.create_index(op.f('ix_players_discord_id'), 'players', ['discord_id'], unique=False)
    op.create_index(op.f('ix_players_guild_id'), 'players', ['guild_id'], unique=False)
    op.create_index(op.f('ix_players_id'), 'players', ['id'], unique=False)
    op.create_table('quest_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('step_order', sa.Integer(), nullable=False),
    sa.Column('title_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('required_mechanics_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('abstract_goal_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('consequences_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['quest_id'], ['generated_quests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('quest_id', 'step_order', name='uq_quest_step_order')
    )
    op.create_index(op.f('ix_quest_steps_id'), 'quest_steps', ['id'], unique=False)
    op.create_index(op.f('ix_quest_steps_quest_id'), 'quest_steps', ['quest_id'], unique=False)
    op.create_table('pending_generations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.Integer(), nullable=False),
    sa.Column('triggered_by_user_id', sa.Integer(), nullable=True),
    sa.Column('trigger_context_json', sa.JSON(), nullable=True),
    sa.Column('ai_prompt_text', sa.Text(), nullable=True),
    sa.Column('raw_ai_response_text', sa.Text(), nullable=True),
    sa.Column('parsed_validated_data_json', sa.JSON(), nullable=True),
    sa.Column('validation_issues_json', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('master_id', sa.Integer(), nullable=True),
    sa.Column('master_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['triggered_by_user_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pending_generations_guild_id'), 'pending_generations', ['guild_id'], unique=False)
    op.create_index(op.f('ix_pending_generations_id'), 'pending_generations', ['id'], unique=False)
    op.create_index(op.f('ix_pending_generations_status'), 'pending_generations', ['status'], unique=False)
    op.create_table('player_npc_memories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('npc_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.Text(), nullable=True),
    sa.Column('memory_details_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('memory_data_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('ai_significance_score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['npc_id'], ['generated_npcs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_player_npc_memories_event_type'), 'player_npc_memories', ['event_type'], unique=False)
    op.create_index(op.f('ix_player_npc_memories_guild_id'), 'player_npc_memories', ['guild_id'], unique=False)
    op.create_index(op.f('ix_player_npc_memories_id'), 'player_npc_memories', ['id'], unique=False)
    op.create_index(op.f('ix_player_npc_memories_npc_id'), 'player_npc_memories', ['npc_id'], unique=False)
    op.create_index(op.f('ix_player_npc_memories_player_id'), 'player_npc_memories', ['player_id'], unique=False)
    op.create_index(op.f('ix_player_npc_memories_timestamp'), 'player_npc_memories', ['timestamp'], unique=False)
    op.create_table('player_quest_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('current_step_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('NOT_STARTED', 'ACTIVE', 'COMPLETED', 'FAILED', 'ABANDONED', name='quest_status_enum'), nullable=False),
    sa.Column('progress_data_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['current_step_id'], ['quest_steps.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['quest_id'], ['generated_quests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id', 'player_id', 'quest_id', name='uq_player_quest')
    )
    op.create_index(op.f('ix_player_quest_progress_current_step_id'), 'player_quest_progress', ['current_step_id'], unique=False)
    op.create_index(op.f('ix_player_quest_progress_guild_id'), 'player_quest_progress', ['guild_id'], unique=False)
    op.create_index(op.f('ix_player_quest_progress_id'), 'player_quest_progress', ['id'], unique=False)
    op.create_index(op.f('ix_player_quest_progress_player_id'), 'player_quest_progress', ['player_id'], unique=False)
    op.create_index(op.f('ix_player_quest_progress_quest_id'), 'player_quest_progress', ['quest_id'], unique=False)
    op.create_index(op.f('ix_player_quest_progress_status'), 'player_quest_progress', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_player_quest_progress_status'), table_name='player_quest_progress')
    op.drop_index(op.f('ix_player_quest_progress_quest_id'), table_name='player_quest_progress')
    op.drop_index(op.f('ix_player_quest_progress_player_id'), table_name='player_quest_progress')
    op.drop_index(op.f('ix_player_quest_progress_id'), table_name='player_quest_progress')
    op.drop_index(op.f('ix_player_quest_progress_guild_id'), table_name='player_quest_progress')
    op.drop_index(op.f('ix_player_quest_progress_current_step_id'), table_name='player_quest_progress')
    op.drop_table('player_quest_progress')
    op.drop_index(op.f('ix_player_npc_memories_timestamp'), table_name='player_npc_memories')
    op.drop_index(op.f('ix_player_npc_memories_player_id'), table_name='player_npc_memories')
    op.drop_index(op.f('ix_player_npc_memories_npc_id'), table_name='player_npc_memories')
    op.drop_index(op.f('ix_player_npc_memories_id'), table_name='player_npc_memories')
    op.drop_index(op.f('ix_player_npc_memories_guild_id'), table_name='player_npc_memories')
    op.drop_index(op.f('ix_player_npc_memories_event_type'), table_name='player_npc_memories')
    op.drop_table('player_npc_memories')
    op.drop_index(op.f('ix_pending_generations_status'), table_name='pending_generations')
    op.drop_index(op.f('ix_pending_generations_id'), table_name='pending_generations')
    op.drop_index(op.f('ix_pending_generations_guild_id'), table_name='pending_generations')
    op.drop_table('pending_generations')
    op.drop_index(op.f('ix_quest_steps_quest_id'), table_name='quest_steps')
    op.drop_index(op.f('ix_quest_steps_id'), table_name='quest_steps')
    op.drop_table('quest_steps')
    op.drop_index(op.f('ix_players_id'), table_name='players')
    op.drop_index(op.f('ix_players_guild_id'), table_name='players')
    op.drop_index(op.f('ix_players_discord_id'), table_name='players')
    op.drop_table('players')
    op.drop_index(op.f('ix_generated_factions_static_id'), table_name='generated_factions')
    op.drop_index(op.f('ix_generated_factions_leader_npc_id'), table_name='generated_factions')
    op.drop_index(op.f('ix_generated_factions_id'), table_name='generated_factions')
    op.drop_index('ix_generated_factions_guild_id_static_id', table_name='generated_factions')
    op.drop_index(op.f('ix_generated_factions_guild_id'), table_name='generated_factions')
    op.drop_table('generated_factions')
    op.drop_index(op.f('ix_story_logs_timestamp'), table_name='story_logs')
    op.drop_index(op.f('ix_story_logs_location_id'), table_name='story_logs')
    op.drop_index(op.f('ix_story_logs_id'), table_name='story_logs')
    op.drop_index(op.f('ix_story_logs_guild_id'), table_name='story_logs')
    op.drop_index(op.f('ix_story_logs_event_type'), table_name='story_logs')
    op.drop_table('story_logs')
    op.drop_index(op.f('ix_parties_id'), table_name='parties')
    op.drop_index(op.f('ix_parties_guild_id'), table_name='parties')
    op.drop_table('parties')
    op.drop_index(op.f('ix_mobile_groups_id'), table_name='mobile_groups')
    op.drop_index(op.f('ix_mobile_groups_guild_id'), table_name='mobile_groups')
    op.drop_index(op.f('ix_mobile_groups_current_location_id'), table_name='mobile_groups')
    op.drop_table('mobile_groups')
    op.drop_index(op.f('ix_inventory_items_owner_entity_type'), table_name='inventory_items')
    op.drop_index(op.f('ix_inventory_items_owner_entity_id'), table_name='inventory_items')
    op.drop_index(op.f('ix_inventory_items_item_id'), table_name='inventory_items')
    op.drop_index(op.f('ix_inventory_items_id'), table_name='inventory_items')
    op.drop_index(op.f('ix_inventory_items_guild_id'), table_name='inventory_items')
    op.drop_table('inventory_items')
    op.drop_index(op.f('ix_generated_quests_static_id'), table_name='generated_quests')
    op.drop_index(op.f('ix_generated_quests_questline_id'), table_name='generated_quests')
    op.drop_index(op.f('ix_generated_quests_id'), table_name='generated_quests')
    op.drop_index(op.f('ix_generated_quests_guild_id'), table_name='generated_quests')
    op.drop_index('ix_generated_quests_giver', table_name='generated_quests')
    op.drop_table('generated_quests')
    op.drop_index(op.f('ix_generated_npcs_static_id'), table_name='generated_npcs')
    op.drop_index(op.f('ix_generated_npcs_id'), table_name='generated_npcs')
    op.drop_index('ix_generated_npcs_guild_id_static_id', table_name='generated_npcs')
    op.drop_index(op.f('ix_generated_npcs_guild_id'), table_name='generated_npcs')
    op.drop_index(op.f('ix_generated_npcs_current_location_id'), table_name='generated_npcs')
    op.drop_table('generated_npcs')
    op.drop_index(op.f('ix_crafting_recipes_static_id'), table_name='crafting_recipes')
    op.drop_index(op.f('ix_crafting_recipes_required_skill_id'), table_name='crafting_recipes')
    op.drop_index(op.f('ix_crafting_recipes_id'), table_name='crafting_recipes')
    op.drop_index(op.f('ix_crafting_recipes_guild_id'), table_name='crafting_recipes')
    op.drop_table('crafting_recipes')
    op.drop_index(op.f('ix_active_status_effects_status_effect_id'), table_name='active_status_effects')
    op.drop_index('ix_active_status_effects_source_entity', table_name='active_status_effects')
    op.drop_index(op.f('ix_active_status_effects_id'), table_name='active_status_effects')
    op.drop_index(op.f('ix_active_status_effects_guild_id'), table_name='active_status_effects')
    op.drop_index(op.f('ix_active_status_effects_entity_type'), table_name='active_status_effects')
    op.drop_index(op.f('ix_active_status_effects_entity_id'), table_name='active_status_effects')
    op.drop_index('ix_active_status_effects_entity', table_name='active_status_effects')
    op.drop_table('active_status_effects')
    op.drop_index(op.f('ix_status_effects_static_id'), table_name='status_effects')
    op.drop_index(op.f('ix_status_effects_id'), table_name='status_effects')
    op.drop_index(op.f('ix_status_effects_guild_id'), table_name='status_effects')
    op.drop_table('status_effects')
    op.drop_index(op.f('ix_skills_static_id'), table_name='skills')
    op.drop_index(op.f('ix_skills_id'), table_name='skills')
    op.drop_index(op.f('ix_skills_guild_id'), table_name='skills')
    op.drop_table('skills')
    op.drop_index(op.f('ix_rule_configs_key'), table_name='rule_configs')
    op.drop_index(op.f('ix_rule_configs_id'), table_name='rule_configs')
    op.drop_index('ix_rule_configs_guild_id_key', table_name='rule_configs')
    op.drop_index(op.f('ix_rule_configs_guild_id'), table_name='rule_configs')
    op.drop_table('rule_configs')
    op.drop_index(op.f('ix_relationships_value'), table_name='relationships')
    op.drop_index(op.f('ix_relationships_id'), table_name='relationships')
    op.drop_index(op.f('ix_relationships_guild_id'), table_name='relationships')
    op.drop_index(op.f('ix_relationships_entity2_type'), table_name='relationships')
    op.drop_index(op.f('ix_relationships_entity2_id'), table_name='relationships')
    op.drop_index(op.f('ix_relationships_entity1_type'), table_name='relationships')
    op.drop_index(op.f('ix_relationships_entity1_id'), table_name='relationships')
    op.drop_table('relationships')
    op.drop_index(op.f('ix_questlines_static_id'), table_name='questlines')
    op.drop_index(op.f('ix_questlines_id'), table_name='questlines')
    op.drop_index(op.f('ix_questlines_guild_id'), table_name='questlines')
    op.drop_table('questlines')
    op.drop_index(op.f('ix_pending_conflicts_status'), table_name='pending_conflicts')
    op.drop_index(op.f('ix_pending_conflicts_id'), table_name='pending_conflicts')
    op.drop_index(op.f('ix_pending_conflicts_guild_id'), table_name='pending_conflicts')
    op.drop_table('pending_conflicts')
    op.drop_index(op.f('ix_locations_static_id'), table_name='locations')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_index('ix_locations_guild_id_static_id', table_name='locations')
    op.drop_index(op.f('ix_locations_guild_id'), table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_items_static_id'), table_name='items')
    op.drop_index(op.f('ix_items_id'), table_name='items')
    op.drop_index('ix_items_guild_id_static_id', table_name='items')
    op.drop_index(op.f('ix_items_guild_id'), table_name='items')
    op.drop_table('items')
    op.drop_index(op.f('ix_abilities_static_id'), table_name='abilities')
    op.drop_index(op.f('ix_abilities_id'), table_name='abilities')
    op.drop_index(op.f('ix_abilities_guild_id'), table_name='abilities')
    op.drop_table('abilities')
    op.drop_index(op.f('ix_guild_configs_id'), table_name='guild_configs')
    op.drop_table('guild_configs')
    # ### end Alembic commands ###
