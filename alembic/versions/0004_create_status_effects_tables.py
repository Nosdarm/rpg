"""create status_effects tables

Revision ID: 0004
Revises: 0003
Create Date: YYYY-MM-DD HH:MM:SS.SSSSSS # Будет заменено актуальной датой при коммите

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0004'
down_revision: Union[str, None] = '0003'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('status_effects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('static_id', sa.Text(), nullable=False),
    sa.Column('name_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description_i18n', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('properties_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id', 'static_id', name='uq_status_effect_guild_static_id')
    )
    op.create_index(op.f('ix_status_effects_guild_id'), 'status_effects', ['guild_id'], unique=False)
    op.create_index(op.f('ix_status_effects_id'), 'status_effects', ['id'], unique=False)
    op.create_index(op.f('ix_status_effects_static_id'), 'status_effects', ['static_id'], unique=False)

    op.create_table('active_status_effects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('entity_type', sa.Text(), nullable=False),
    sa.Column('status_effect_id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('applied_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('duration_turns', sa.Integer(), nullable=True),
    sa.Column('remaining_turns', sa.Integer(), nullable=True),
    sa.Column('source_ability_id', sa.Integer(), nullable=True),
    sa.Column('custom_properties_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.id'], ),
    sa.ForeignKeyConstraint(['status_effect_id'], ['status_effects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_active_status_effects_entity_id'), 'active_status_effects', ['entity_id'], unique=False)
    op.create_index(op.f('ix_active_status_effects_entity_type'), 'active_status_effects', ['entity_type'], unique=False)
    op.create_index(op.f('ix_active_status_effects_guild_id'), 'active_status_effects', ['guild_id'], unique=False)
    op.create_index(op.f('ix_active_status_effects_id'), 'active_status_effects', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_active_status_effects_id'), table_name='active_status_effects')
    op.drop_index(op.f('ix_active_status_effects_guild_id'), table_name='active_status_effects')
    op.drop_index(op.f('ix_active_status_effects_entity_type'), table_name='active_status_effects')
    op.drop_index(op.f('ix_active_status_effects_entity_id'), table_name='active_status_effects')
    op.drop_table('active_status_effects')

    op.drop_index(op.f('ix_status_effects_static_id'), table_name='status_effects')
    op.drop_index(op.f('ix_status_effects_id'), table_name='status_effects')
    op.drop_index(op.f('ix_status_effects_guild_id'), table_name='status_effects')
    op.drop_table('status_effects')
    # ### end Alembic commands ###
