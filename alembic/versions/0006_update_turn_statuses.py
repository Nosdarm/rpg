"""Update turn statuses enums

Revision ID: 0006
Revises: 0005
Create Date: YYYY-MM-DD HH:MM:SS.SSSSSS # Will be auto-filled by Alembic if generated, manually approximate here

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0006'
down_revision: Union[str, None] = '0005'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# Enum type names as defined in the database (usually lowercase of Python enum name)
PLAYER_STATUS_ENUM_NAME = 'playerstatus'
PARTY_TURN_STATUS_ENUM_NAME = 'partyturnstatus'

# New values to add
new_player_status_values = [
    'TURN_ENDED_PENDING_RESOLUTION',
    'PROCESSING_GUILD_TURN'
]

new_party_turn_status_values = [
    'AWAITING_PARTY_ACTION',
    'TURN_ENDED_PENDING_RESOLUTION',
    'PROCESSING_GUILD_TURN'
]

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add new values to PlayerStatus enum
    for value in new_player_status_values:
        op.execute(f"ALTER TYPE {PLAYER_STATUS_ENUM_NAME} ADD VALUE IF NOT EXISTS '{value}'")

    # Add new values to PartyTurnStatus enum
    for value in new_party_turn_status_values:
        op.execute(f"ALTER TYPE {PARTY_TURN_STATUS_ENUM_NAME} ADD VALUE IF NOT EXISTS '{value}'")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Downgrading ENUM value additions is complex and often not directly supported
    # without recreating the type. For simplicity, this downgrade path does nothing
    # regarding the enum values. If data integrity with old enum values is critical,
    # a more complex downgrade (e.g., converting data, dropping/recreating enum)
    # would be needed.
    # The old values PROCESSING_ACTION (PlayerStatus) and others from PartyTurnStatus
    # are not being explicitly removed from the type here to avoid data loss issues
    # if any rows still use them. The application logic will simply stop using them.
    pass
    # ### end Alembic commands ###
