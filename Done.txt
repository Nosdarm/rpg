# –°–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
## Phase 0: Architecture and Initialization
- Task 0.1: Discord Bot Project Initialization and Basic Guild Integration (MVP)
- Task 0.2: DBMS Setup and Database Model Definition with Guild ID (MVP)
- Task 0.3: Common Guild-Scoped Database Utilities (MVP)
## Phase 1: Game World (Static & Generated)
- Task 1.1: Location Model (i18n, Guild-Scoped)
- Task 1.2: Player and Party System (ORM, Commands, Guild-Scoped)
- Task 1.3: Movement Logic (API, Command, Guild-Scoped, Basic Party Movement)
## Phase 2: AI Integration - Generation Core
- Task 2.1: Finalize Definition of ALL DB Schemas (i18n, Guild ID)
- Task 2.2: AI Prompt Preparation Module (MVP)
- Task 2.3: AI Response Parsing and Validation Module (MVP)
- Task 2.6: AI Generation, Moderation, and Saving Logic (MVP, Guild-Scoped)
## Phase 6: Action Resolution Systems (Core Mechanics)
- Task ‚öôÔ∏è 6.1.1: Intra-Location Interaction Handler Module
- Task ‚öôÔ∏è 6.3.1: Dice Roller Module (MVP)
- Task ‚öôÔ∏è 6.3.2: Check Resolver Module (MVP)
- Task ‚öôÔ∏è 6.10: Action Parsing and Recognition Module (NLU & Intent/Entity) (MVP)
- Task ‚öôÔ∏è 6.11: Central Collected Actions Processing Module (Turn Processor) - Guild-Scoped Execution (MVP)
- Task ‚öôÔ∏è 6.12: Turn Queue System (Turn Controller) - Per-Guild Processing (MVP)
## Phase 7: Narrative Generation and Event Log
- Task 17: üìö 7.1 Event Log Model (Story Log, i18n, Guild-Scoped)
- Task 18: üìö 7.2 AI Narrative Generation (Multilang)
Description: Verified existing `generate_narrative` function in `src/core/ai_orchestrator.py`. Confirmed it meets requirements for language handling (player/guild/default), prompt construction from context, and error handling. Ensured it's correctly exported. Verified existing unit tests in `tests/core/test_ai_orchestrator.py` cover necessary scenarios. No code changes were required for the function itself.
Result: API for generating narrative text on demand is confirmed to be in place and tested.
- Task 19: üìö 7.3 Turn and Report Formatting (Guild-Scoped) - *Initial MVP, needs revisit*
## Phase 3: Abilities and Checks Mechanics
- Task 20: üß† 3.1 Ability Model (i18n, Guild-Scoped)
- Task 21: üß† 3.2 Entity Status Model (Status Effects, i18n, Guild-Scoped)
Description: Defined `StatusEffect` and `ActiveStatusEffect` models in `src/models/status_effect.py`. `StatusEffect` stores definitions (guild-scoped, i18n names/descriptions, properties). `ActiveStatusEffect` tracks instances applied to entities (players, NPCs) with duration, source, and custom properties. Updated `GuildConfig` with relationships. Created Alembic migration `0004_create_status_effects_tables.py`. Added basic unit tests for model creation.
Result: StatusEffect and ActiveStatusEffect models defined and integrated with basic tests.
- Task 22: üß† 3.3 API for Activating Abilities and Applying Statuses (Guild-Scoped) - MVP
## Phase 4: World and Location Model
- Task 23: üó∫Ô∏è 4.1 Location Model (i18n, Guild-Scoped)
Description: –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ –∏ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–∞ –º–æ–¥–µ–ª—å `Location` –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã. –ü–æ–ª—è –º–æ–¥–µ–ª–∏ –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `JSONB`). –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –≤ `on_guild_join` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è `GuildConfig` (—Å –ø–æ–ª–µ–º `name`) –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–π (`DEFAULT_STATIC_LOCATIONS`) –ø—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –±–æ—Ç–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É. –°–æ–∑–¥–∞–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏—è Alembic –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î (`0005_use_jsonb_for_location_fields.py`). –ù–∞–ø–∏—Å–∞–Ω—ã –∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã Unit-—Ç–µ—Å—Ç—ã –¥–ª—è –º–æ–¥–µ–ª–∏ `Location` –∏ —É—Ç–∏–ª–∏—Ç `locations_utils`. –í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã.
Result: –ú–æ–¥–µ–ª—å Location –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∏–ª—å–¥–∏–∏ –≤–∫–ª—é—á–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–π. –ö–æ–¥–æ–≤–∞—è –±–∞–∑–∞ —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Ç–µ—Å—Ç–∞–º–∏.
- Task 25: üó∫Ô∏è 4.3 Location Transitions (Guild-Scoped)
Description: Implemented `execute_move_for_player_action` in `movement_logic.py` to handle player/party movement based on a target identifier (static_id or name). Includes i18n-aware, case-insensitive name matching with language fallback. Integrated this function into `action_processor.py`. Added unit tests for new search logic and updated existing tests.
Result: Player/party movement actions Prozessoreingang can now be resolved using location names or static_ids.
- Task 24: üó∫Ô∏è 4.2 Guild Map Generation and Editing (Guild-Scoped)
Description: –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è `generate_location` –≤ `src/core/world_generation.py` –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —è–≤–Ω–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è `parent_location_id` –∏ `connection_details_i18n` –ø—Ä–∏ AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ª–æ–∫–∞—Ü–∏–π. –î–æ–±–∞–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö —Å–≤—è–∑–µ–π —Å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –ª–æ–∫–∞—Ü–∏–µ–π –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ Discord `/master_map generate_ai_location` –≤ `src/bot/commands/master_map_commands.py` –¥–ª—è –ø—Ä–∏–µ–º–∞ –Ω–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (`parent_location_id`, `connection_details_i18n_json`) –∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∏—Ö –≤ `generate_location`. –ú–æ–∫ AI (`_mock_openai_api_call`) –ø—Ä–æ–≤–µ—Ä–µ–Ω –∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π. –ü—Ä–æ–≤–µ–¥–µ–Ω–æ –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.
Result: API –∏ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ª–æ–∫–∞—Ü–∏–π AI —Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —è–≤–Ω–æ–µ —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ —Å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –ª–æ–∫–∞—Ü–∏–µ–π, —É–ª—É—á—à–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ–π. –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –ú–∞—Å—Ç–µ—Ä–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã –∫–∞–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.

## –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ (–†–∞–∑–Ω–æ–µ)
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ—Å—Ç –¥–ª—è main.py, –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥–∏
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –∏–º–ø–æ—Ä—Ç–∞ –∏ TypeError
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Alembic –º–∏–≥—Ä–∞—Ü–∏–π
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–∫-—Ç–µ—Å—Ç–æ–≤ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∏—Ö –∑–∞–ø—É—Å–∫–µ
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Pyright
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–µ–∫—Ç–∞ (—á–∏—Ç–∞–µ–º–æ—Å—Ç—å, N+1)
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤ —Ç–µ—Å—Ç–∞—Ö action_processor, general_commands, –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ ping
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Pyright (—Å–µ—Å—Å–∏—è 2)
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Pyright (—Å–µ—Å—Å–∏—è 3 - test_action_processor, localization_utils, test_interaction_handlers, ai_orchestrator, test_general_commands, events, game_events, movement_logic, report_formatter, test_localization_utils, test_movement_logic)
