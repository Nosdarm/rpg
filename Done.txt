# –°–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
## Phase 0: Architecture and Initialization
- Task 0.1: Discord Bot Project Initialization and Basic Guild Integration (MVP)
- Task 0.2: DBMS Setup and Database Model Definition with Guild ID (MVP)
- Task 0.3: Common Guild-Scoped Database Utilities (MVP)
## Phase 1: Game World (Static & Generated)
- Task 1.1: Location Model (i18n, Guild-Scoped)
- Task 1.2: Player and Party System (ORM, Commands, Guild-Scoped)
- Task 1.3: Movement Logic (API, Command, Guild-Scoped, Basic Party Movement)
## Phase 2: AI Integration - Generation Core
- Task 2.1: Finalize Definition of ALL DB Schemas (i18n, Guild ID)
- Task 2.2: AI Prompt Preparation Module (MVP)
- Task 2.3: AI Response Parsing and Validation Module (MVP)
- Task 2.6: AI Generation, Moderation, and Saving Logic (MVP, Guild-Scoped)
## Phase 6: Action Resolution Systems (Core Mechanics)
- Task ‚öôÔ∏è 6.1.1: Intra-Location Interaction Handler Module
- Task ‚öôÔ∏è 6.3.1: Dice Roller Module (MVP)
- Task ‚öôÔ∏è 6.3.2: Check Resolver Module (MVP)
- Task ‚öôÔ∏è 6.10: Action Parsing and Recognition Module (NLU & Intent/Entity) (MVP)
- Task ‚öôÔ∏è 6.11: Central Collected Actions Processing Module (Turn Processor) - Guild-Scoped Execution (MVP)
- Task ‚öôÔ∏è 6.12: Turn Queue System (Turn Controller) - Per-Guild Processing (MVP)
## Phase 7: Narrative Generation and Event Log
- Task 17: üìö 7.1 Event Log Model (Story Log, i18n, Guild-Scoped)
- Task 18: üìö 7.2 AI Narrative Generation (Multilang)
Description: Verified existing `generate_narrative` function in `src/core/ai_orchestrator.py`. Confirmed it meets requirements for language handling (player/guild/default), prompt construction from context, and error handling. Ensured it's correctly exported. Verified existing unit tests in `tests/core/test_ai_orchestrator.py` cover necessary scenarios. No code changes were required for the function itself.
Result: API for generating narrative text on demand is confirmed to be in place and tested.
- Task 19: üìö 7.3 Turn and Report Formatting (Guild-Scoped) - *Initial MVP, needs revisit*
## Phase 3: Abilities and Checks Mechanics
- Task 20: üß† 3.1 Ability Model (i18n, Guild-Scoped)
- Task 21: üß† 3.2 Entity Status Model (Status Effects, i18n, Guild-Scoped)
Description: Defined `StatusEffect` and `ActiveStatusEffect` models in `src/models/status_effect.py`. `StatusEffect` stores definitions (guild-scoped, i18n names/descriptions, properties). `ActiveStatusEffect` tracks instances applied to entities (players, NPCs) with duration, source, and custom properties. Updated `GuildConfig` with relationships. Created Alembic migration `0004_create_status_effects_tables.py`. Added basic unit tests for model creation.
Result: StatusEffect and ActiveStatusEffect models defined and integrated with basic tests.
- Task 22: üß† 3.3 API for Activating Abilities and Applying Statuses (Guild-Scoped) - MVP
## Phase 4: World and Location Model
- Task 23: üó∫Ô∏è 4.1 Location Model (i18n, Guild-Scoped) - Covered by Task 1.1
- Task 24: üó∫Ô∏è 4.2 Guild Map Generation and Editing (Guild-Scoped)
Description: –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω API `generate_location` –≤ `src/core/world_generation.py` (–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –∏–∑ `generate_new_location_via_ai`) –¥–ª—è AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ª–æ–∫–∞—Ü–∏–π, –≤–∫–ª—é—á–∞—è –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–≤—è–∑–µ–π —Å —Å–æ—Å–µ–¥—è–º–∏ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ. –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã API –¥–ª—è –ú–∞—Å—Ç–µ—Ä–∞ –≤ `src/core/map_management.py` (`add_location_master`, `remove_location_master`, `connect_locations_master`, `disconnect_locations_master`). –°–æ–∑–¥–∞–Ω Cog `MasterMapCog` –≤ `src/bot/commands/master_map_commands.py` —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ slash-–∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è –ú–∞—Å—Ç–µ—Ä–∞, –∑–∞—â–∏—â–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. `MasterMapCog` –¥–æ–±–∞–≤–ª–µ–Ω –≤ `BOT_COGS`. –û–±–Ω–æ–≤–ª–µ–Ω—ã –∏–º–ø–æ—Ä—Ç—ã –≤ `src/core/__init__.py`.
Result: –°–∏—Å—Ç–µ–º–∞ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ –ª–æ–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ AI (–º–æ–∫) –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ú–∞—Å—Ç–µ—Ä–∞–º –≤—Ä—É—á–Ω—É—é —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞—Ä—Ç–æ–π –≥–∏–ª—å–¥–∏–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—ã Discord.
- Task 25: üó∫Ô∏è 4.3 Location Transitions (Guild-Scoped)
Description: Implemented `execute_move_for_player_action` in `movement_logic.py` to handle player/party movement based on a target identifier (static_id or name). Includes i18n-aware, case-insensitive name matching with language fallback. Integrated this function into `action_processor.py`. Added unit tests for new search logic and updated existing tests.
Result: Player/party movement actions Prozessoreingang can now be resolved using location names or static_ids.

## –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ (–†–∞–∑–Ω–æ–µ)
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ—Å—Ç –¥–ª—è main.py, –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥–∏
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –∏–º–ø–æ—Ä—Ç–∞ –∏ TypeError
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Alembic –º–∏–≥—Ä–∞—Ü–∏–π
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–∫-—Ç–µ—Å—Ç–æ–≤ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∏—Ö –∑–∞–ø—É—Å–∫–µ
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Pyright
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–µ–∫—Ç–∞ (—á–∏—Ç–∞–µ–º–æ—Å—Ç—å, N+1)
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤ —Ç–µ—Å—Ç–∞—Ö action_processor, general_commands, –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ ping
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Pyright (—Å–µ—Å—Å–∏—è 2)
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Pyright (—Å–µ—Å—Å–∏—è 3 - test_action_processor, localization_utils, test_interaction_handlers, ai_orchestrator, test_general_commands, events, game_events, movement_logic, report_formatter, test_localization_utils, test_movement_logic)
